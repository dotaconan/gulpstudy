define(function(require,t,e){var $=require("$"),s=function(t,e){this.$element=$(t),this.options=$.extend({},s.DEFAULTS,$(t).data(),e),this.init()};s.DEFAULTS={handle:null,axis:null,groove:null,scope:null,cursor:"move",onStart:function(){},onDrag:function(){},onEnd:function(){}},s.prototype.init=function(){this.$handle=this.options.handle?this.options.handle:this.$element,this.axis=this.options.axis,this.$scope=this.options.scope,this.groove=this.options.groove,this.onStart=this.options.onStart,this.onDrag=this.options.onDrag,this.onEnd=this.options.onEnd,this.$handle.css("cursor",this.options.cursor),this.mouseDown()},s.prototype.mouseDown=function(){var t=this;this.$handle.bind("mousedown",function(e){t.startX=e.clientX,t.startY=e.clientY,t.distanceX=0,t.distanceY=0,t.startLeft=t.$element.offset().left,t.startTop=t.$element.offset().top,t.packLeft=t.startLeft-t.$element.position().left,t.packTop=t.startTop-t.$element.position().top,t.nowLeft=t.startLeft,t.nowTop=t.startTop,t.objWidth=t.$element.outerWidth(),t.objHeight=t.$element.outerHeight(),t.$scopeWidth=t.$scope?t.$scope.outerWidth():$(window).width(),t.$scopeHeight=t.$scope?t.$scope.outerHeight():$(window).height(),t.$scopeLeft=t.$scope?t.$scope.offset().left:0,t.$scopeTop=t.$scope?t.$scope.offset().top:0,t.onStart.call(t.$element,t.$element),$(document).bind({mousemove:function(){t.mouseMove()},mouseup:function(){t.mouseUp()}}),e.preventDefault()})},s.prototype.mouseMove=function(){var t=event.clientX,e=event.clientY,s=t-this.startX,o=e-this.startY;switch(this.axis){case"X":this.nowLeft=this.startLeft+s;break;case"Y":this.nowTop=this.startTop+o;break;default:this.nowLeft=this.startLeft+s,this.nowTop=this.startTop+o}this.nowLeft=this.nowLeft+this.objWidth>this.$scopeWidth+this.$scopeLeft?this.$scopeWidth+this.$scopeLeft-this.objWidth:this.nowLeft>this.$scopeLeft?this.nowLeft:this.$scopeLeft,this.nowTop=this.nowTop+this.objHeight>this.$scopeHeight+this.$scopeTop?this.$scopeHeight+this.$scopeTop-this.objHeight:this.nowTop>this.$scopeTop?this.nowTop:this.$scopeTop,this.onDrag.call(this.$element,this.$element),this.$element.css({left:"Y"==this.axis?null:this.nowLeft-this.packLeft,top:"X"==this.axis?null:this.nowTop-this.packTop}),"Y"==this.axis?this.$scope.find(this.groove).height(this.$scope.height()-parseInt(this.$element.css("top"))):this.$scope.find(this.groove).width(this.$element.css("left"))},s.prototype.mouseUp=function(t){$(document).unbind("mousemove mouseup"),this.onEnd.call(this.$element,this.$element)},s.prototype.setPercent=function(t){switch(this.axis){case"X":this.$element.css("left",(this.$scope.outerWidth()-this.$element.outerWidth())*t),this.$scope.find(this.groove).width((this.$scope.outerWidth()-this.$element.outerWidth())*t);break;case"Y":this.$element.css("top",(this.$scope.outerHeight()-this.$element.outerHeight())*t),this.$scope.find(this.groove).height((this.$scope.outerWidth()-this.$element.outerWidth())*t)}},s.prototype.getPercent=function(){var t;switch(this.axis){case"X":t=parseInt(this.$element.css("left"))/(this.$scope.outerWidth()-this.$element.outerWidth());break;case"Y":t=1-parseInt(this.$element.css("top"))/(this.$scope.outerHeight()-this.$element.outerHeight())}return t},e.exports=s});